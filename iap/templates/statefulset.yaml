{{- if .Values.statefulset.enabled -}}
# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
# Source: iap/templates/statefulset.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "iap.fullname" . }}
  labels:
    {{- include "iap.labels" . | nindent 4 }}
spec:
  serviceName: "iap-service"
  selector:
    matchLabels:
      {{- include "iap.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "iap.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.service.port }}
            protocol: TCP
        {{- if .Values.startupProbe }}
        startupProbe:
          {{- toYaml .Values.startupProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.resources }}
        resources:  {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          # Uses the configmap to mount a config file at the below path
          - name: "config-volume"
            mountPath: "/opt/itential/automation-platform/config/custom-properties.json"
            subPath: "custom-properties.json"
          # Uses a persistent volume claim to mount a directory to write IAP log files to
          - name: "iap-logs-volume"
            mountPath: "/var/log/itential"
          # Uses a persistent volume claim to mount a directory that includes adapters and apps
          - name: "iap-assets-volume"
            mountPath: "/opt/custom"
        {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        # config-volume is a configmap that contains files that are required by the IAG
        # application and can be customized.
        - name: "config-volume"
          configMap:
            name: "iap-config-map"
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: "iap-assets-volume"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaims.assetClaim.storage }}
        storageClassName: {{ .Values.storageClass.name }}
    - metadata:
        name: "iap-logs-volume"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaims.logClaim.storage }}
        storageClassName: {{ .Values.storageClass.name }}
{{- end }}